{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "#import nessesry libraries \n",
    "import pandas as pd \n",
    "from sklearn import svm\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import math\n",
    "from sklearn import metrics\n",
    "from sklearn.metrics import confusion_matrix\n",
    "from sklearn.metrics import classification_report\n",
    "from sklearn.metrics import plot_confusion_matrix\n",
    "from sklearn.svm import LinearSVC, SVC\n",
    "from sklearn.gaussian_process import GaussianProcessClassifier\n",
    "from sklearn.gaussian_process.kernels import RBF\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore') "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>x1</th>\n",
       "      <th>x2</th>\n",
       "      <th>y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.603070</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.093318</td>\n",
       "      <td>0.649854</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.097926</td>\n",
       "      <td>0.705409</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.155530</td>\n",
       "      <td>0.784357</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.210829</td>\n",
       "      <td>0.866228</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         x1        x2  y\n",
       "0  0.107143  0.603070  1\n",
       "1  0.093318  0.649854  1\n",
       "2  0.097926  0.705409  1\n",
       "3  0.155530  0.784357  1\n",
       "4  0.210829  0.866228  1"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#read dataset file\n",
    "data = pd.read_csv(\"SVMdataset.csv\") \n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "features=['x1','x2'] # Features\n",
    "x=data[features]\n",
    "y=data['y']\n",
    "x=x.values.reshape(-2,2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "#splitting data \n",
    "from  sklearn.model_selection  import train_test_split\n",
    "X_train,X,y_train,Y=train_test_split(x,y,train_size=0.6,test_size=0.4,random_state=42)\n",
    "X_cv,X_test,y_cv,y_test= train_test_split(X,Y,test_size = 0.50,train_size =0.50,random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#plotting train dataset \n",
    "from sklearn.preprocessing import StandardScaler\n",
    "X_train = StandardScaler().fit_transform(X_train)\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.scatter(X_train [y_train== 0][:, 0], X_train [y_train== 0][:, 1],marker='o', color='r', label='-ve')\n",
    "plt.scatter(X_train [y_train== 1][:, 0], X_train [y_train== 1][:, 1],marker='x', color='b', label='+ve')\n",
    "plt.legend();\n",
    "plt.title('train SVM dataset')\n",
    "plt.xlabel('x1')\n",
    "plt.ylabel('x2')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#plotting test dataset \n",
    "\n",
    "X_test = StandardScaler().fit_transform(X_test )\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.scatter(X_test [y_test== 0][:, 0], X_test [y_test== 0][:, 1],marker='o', color='r', label='-ve')\n",
    "plt.scatter(X_test [y_test== 1][:, 0], X_test [y_test== 1][:, 1],marker='x', color='b', label='+ve')\n",
    "plt.legend();\n",
    "plt.title('test SVM dataset')\n",
    "plt.xlabel('x1')\n",
    "plt.ylabel('x2')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#plotting validation dataset \n",
    "\n",
    "X_cv= StandardScaler().fit_transform(X_cv)\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.scatter(X_cv[y_cv== 0][:, 0],X_cv [y_cv== 0][:, 1],marker='o', color='r', label='-ve')\n",
    "plt.scatter(X_cv [y_cv== 1][:, 0],X_cv [y_cv== 1][:, 1],marker='x', color='b', label='+ve')\n",
    "plt.legend();\n",
    "plt.title('validation SVM dataset')\n",
    "plt.xlabel('x1')\n",
    "plt.ylabel('x2')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "classifier with linear kernel.\n"
     ]
    }
   ],
   "source": [
    "print('classifier with linear kernel.')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "best c:  0.011\n"
     ]
    }
   ],
   "source": [
    "#For the classifier with linear kernel i create a for loop to try a range of C values to find\n",
    "#the C value that gives the best F1 score using the validation data.\n",
    "\n",
    "\n",
    "c_values_l=[]\n",
    "\n",
    "for i in range(1,100,2):\n",
    "    i=i*0.001\n",
    "    c_values_l.append(i)\n",
    "max_f1_score = float('-inf')\n",
    "best_c = None\n",
    "for c in c_values_l:\n",
    "\n",
    "    linear_clf = svm.SVC(kernel='linear',C=c)\n",
    "    linear_clf.fit(X_train, y_train)\n",
    "    y_pred = linear_clf.predict(X_cv)\n",
    "    current_f1_score = metrics.f1_score(y_cv, y_pred)\n",
    "\n",
    "    if current_f1_score > max_f1_score:\n",
    "        max_f1_score = current_f1_score\n",
    "        best_c = c\n",
    "\n",
    "\n",
    "print('best c: ',best_c)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "classification report for validation SVM dataset\n",
      "[[12 67]\n",
      " [ 6 88]]\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.67      0.15      0.25        79\n",
      "           1       0.57      0.94      0.71        94\n",
      "\n",
      "    accuracy                           0.58       173\n",
      "   macro avg       0.62      0.54      0.48       173\n",
      "weighted avg       0.61      0.58      0.50       173\n",
      "\n",
      "************************\n",
      "confusion_matrix: [[12 67]\n",
      " [ 6 88]]\n",
      "tn:  12   ,fp:  67   ,fn:  6   ,tp:  88\n",
      "************************\n",
      "classification report for validation SVM dataset\n",
      "Accuracy: 0.5780346820809249\n",
      "Precision: 0.567741935483871\n",
      "Recall: 0.9361702127659575\n",
      "f1 score: 0.7068273092369478\n",
      "auc roc: 0.5440344734715864\n"
     ]
    }
   ],
   "source": [
    "#Print the values of accuracy, prescion, recall, and F1 score for the the validation datasets\n",
    "\n",
    "print('classification report for validation SVM dataset')\n",
    "linear_clf = svm.SVC(kernel='linear',C=best_c)\n",
    "linear_clf.fit(X_train, y_train)\n",
    "y_pred_l = linear_clf.predict(X_cv)\n",
    "print(confusion_matrix(y_cv,y_pred_l))\n",
    "print(classification_report(y_cv,y_pred_l))\n",
    "print('************************')\n",
    "cnf_matrix_l = metrics.confusion_matrix(y_cv, y_pred_l)\n",
    "tn, fp, fn, tp = metrics.confusion_matrix(y_cv, y_pred_l).ravel()\n",
    "print(\"confusion_matrix:\",cnf_matrix_l)\n",
    "print(\"tn: \",tn,\" \",\",fp: \", fp,\" \",\",fn: \", fn,\" \" ,\",tp: \", tp)\n",
    "print('************************')\n",
    "print('classification report for validation SVM dataset')\n",
    "acc=metrics.accuracy_score(y_cv, y_pred_l)\n",
    "print(\"Accuracy:\",acc)\n",
    "pre=metrics.precision_score(y_cv, y_pred_l)\n",
    "print(\"Precision:\",pre)\n",
    "rec=metrics.recall_score(y_cv, y_pred_l)\n",
    "print(\"Recall:\",rec)\n",
    "fscore=metrics.f1_score(y_cv, y_pred_l)\n",
    "print(\"f1 score:\",fscore)\n",
    "auc=metrics.roc_auc_score(y_cv, y_pred_l)\n",
    "print(\"auc roc:\",auc)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=(8, 8))\n",
    "ax.imshow(cnf_matrix_l)\n",
    "ax.grid(False)\n",
    "ax.xaxis.set(ticks=(0, 1), ticklabels=('Predicted 0s', 'Predicted 1s'))\n",
    "ax.yaxis.set(ticks=(0, 1), ticklabels=('Actual 0s', 'Actual 1s'))\n",
    "ax.set_ylim(1.5, -0.5)\n",
    "s = [['TN','FP'], ['FN', 'TP']]\n",
    "for i in range(2):\n",
    "    for j in range(2):\n",
    "        ax.text(j, i, str(s[i][j])+\" = \"+str(cnf_matrix_l[i][j]), ha='center', va='center', color='black')\n",
    "plt.title('confusion_matrix validation SVM dataset')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "confusion_matrix validation SVM dataset\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x25df2b02eb0>"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "print('confusion_matrix validation SVM dataset')\n",
    "plot_confusion_matrix(linear_clf, X_cv, y_cv)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Print linear svc decision boundary for validation dataset\n",
    "\n",
    "def make_meshgrid(x, y, h=.02):\n",
    "    x_min, x_max = x.min() - 1, x.max() + 1\n",
    "    y_min, y_max = y.min() - 1, y.max() + 1\n",
    "    xx, yy = np.meshgrid(np.arange(x_min, x_max, h), np.arange(y_min, y_max, h))\n",
    "    return xx, yy\n",
    "\n",
    "def plot_contours(ax, clf, xx, yy, **params):\n",
    "    Z = clf.predict(np.c_[xx.ravel(), yy.ravel()])\n",
    "    Z = Z.reshape(xx.shape)\n",
    "    out = ax.contourf(xx, yy, Z, **params)\n",
    "    return out\n",
    "\n",
    "linear_clf = svm.SVC(kernel='linear',C=best_c)\n",
    "linear_clf.fit(X_train, y_train)\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "xx, yy = make_meshgrid( X_cv[:, 0], X_cv[:, 1])\n",
    "\n",
    "plot_contours(ax, linear_clf, xx, yy, cmap=plt.cm.coolwarm, alpha=0.8)\n",
    "\n",
    "plt.scatter(X_cv[y_cv== 0][:, 0],X_cv [y_cv== 0][:, 1],marker='o', color='r', label='-ve')\n",
    "plt.scatter(X_cv [y_cv== 1][:, 0],X_cv [y_cv== 1][:, 1],marker='x', color='b', label='+ve')\n",
    "\n",
    "ax.set_ylabel('y_cv')\n",
    "ax.set_xlabel('X_cv')\n",
    "ax.set_xticks(())\n",
    "ax.set_yticks(())\n",
    "ax.set_title('decision boundary for validation SVM dataset')\n",
    "ax.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "confusion_matrix train SVM dataset\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x25df34478e0>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Print linearconfusion_matrix train SVM dataset\n",
    "\n",
    "print('confusion_matrix train SVM dataset')\n",
    "plot_confusion_matrix(linear_clf, X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "classification report for train SVM dataset\n",
      "[[ 15 218]\n",
      " [ 24 260]]\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.38      0.06      0.11       233\n",
      "           1       0.54      0.92      0.68       284\n",
      "\n",
      "    accuracy                           0.53       517\n",
      "   macro avg       0.46      0.49      0.40       517\n",
      "weighted avg       0.47      0.53      0.42       517\n",
      "\n",
      "************************\n",
      "confusion_matrix: [[ 15 218]\n",
      " [ 24 260]]\n",
      "tn:  15   ,fp:  218   ,fn:  24   ,tp:  260\n",
      "************************\n",
      "classification report for train SVM dataset\n",
      "Accuracy: 0.5319148936170213\n",
      "Precision: 0.5439330543933054\n",
      "Recall: 0.9154929577464789\n",
      "f1 score: 0.6824146981627296\n",
      "auc roc: 0.48993532007495616\n"
     ]
    }
   ],
   "source": [
    "#Print the values of accuracy, prescion, recall, and F1 score for the the train datasets\n",
    "\n",
    "print('classification report for train SVM dataset')\n",
    "linear_clf = svm.SVC(kernel='linear',C=best_c)\n",
    "linear_clf.fit(X_train, y_train)\n",
    "y_pred_l = linear_clf.predict(X_train)\n",
    "print(confusion_matrix(y_train,y_pred_l))\n",
    "print(classification_report(y_train,y_pred_l))\n",
    "print('************************')\n",
    "cnf_matrix_l = metrics.confusion_matrix(y_train, y_pred_l)\n",
    "tn, fp, fn, tp = metrics.confusion_matrix(y_train, y_pred_l).ravel()\n",
    "print(\"confusion_matrix:\",cnf_matrix_l)\n",
    "print(\"tn: \",tn,\" \",\",fp: \", fp,\" \",\",fn: \", fn,\" \" ,\",tp: \", tp)\n",
    "print('************************')\n",
    "print('classification report for train SVM dataset')\n",
    "acc=metrics.accuracy_score(y_train, y_pred_l)\n",
    "print(\"Accuracy:\",acc)\n",
    "pre=metrics.precision_score(y_train, y_pred_l)\n",
    "print(\"Precision:\",pre)\n",
    "rec=metrics.recall_score(y_train, y_pred_l)\n",
    "print(\"Recall:\",rec)\n",
    "fscore=metrics.f1_score(y_train, y_pred_l)\n",
    "print(\"f1 score:\",fscore)\n",
    "auc=metrics.roc_auc_score(y_train, y_pred_l)\n",
    "print(\"auc roc:\",auc)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Print linear svc decision boundary for training dataset\n",
    "\n",
    "def make_meshgrid(x, y, h=.02):\n",
    "    x_min, x_max = x.min() - 1, x.max() + 1\n",
    "    y_min, y_max = y.min() - 1, y.max() + 1\n",
    "    xx, yy = np.meshgrid(np.arange(x_min, x_max, h), np.arange(y_min, y_max, h))\n",
    "    return xx, yy\n",
    "\n",
    "def plot_contours(ax, clf, xx, yy, **params):\n",
    "    Z = clf.predict(np.c_[xx.ravel(), yy.ravel()])\n",
    "    Z = Z.reshape(xx.shape)\n",
    "    out = ax.contourf(xx, yy, Z, **params)\n",
    "    return out\n",
    "\n",
    "linear_clf = svm.SVC(kernel='linear',C=best_c)\n",
    "linear_clf.fit(X_train, y_train)\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "xx, yy = make_meshgrid( X_train[:, 0], X_train[:, 1])\n",
    "\n",
    "plot_contours(ax, linear_clf, xx, yy, cmap=plt.cm.coolwarm, alpha=0.8)\n",
    "\n",
    "plt.scatter(X_train[y_train== 0][:, 0],X_train [y_train== 0][:, 1],marker='o', color='r', label='-ve')\n",
    "plt.scatter(X_train [y_train== 1][:, 0],X_train [y_train== 1][:, 1],marker='x', color='b', label='+ve')\n",
    "\n",
    "ax.set_ylabel('y_train')\n",
    "ax.set_xlabel('x_train')\n",
    "ax.set_xticks(())\n",
    "ax.set_yticks(())\n",
    "ax.set_title('decision boundary for train SVM dataset')\n",
    "ax.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "confusion_matrix test SVM dataset\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x25df3323eb0>"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "print('confusion_matrix test SVM dataset')\n",
    "\n",
    "plot_confusion_matrix(linear_clf, X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "classification report for test SVM dataset\n",
      "[[ 5 66]\n",
      " [11 91]]\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.31      0.07      0.11        71\n",
      "           1       0.58      0.89      0.70       102\n",
      "\n",
      "    accuracy                           0.55       173\n",
      "   macro avg       0.45      0.48      0.41       173\n",
      "weighted avg       0.47      0.55      0.46       173\n",
      "\n",
      "************************\n",
      "confusion_matrix: [[ 5 66]\n",
      " [11 91]]\n",
      "tn:  5   ,fp:  66   ,fn:  11   ,tp:  91\n",
      "************************\n",
      "classification report for test SVM dataset\n",
      "Accuracy: 0.5549132947976878\n",
      "Precision: 0.5796178343949044\n",
      "Recall: 0.8921568627450981\n",
      "f1 score: 0.7027027027027027\n",
      "auc roc: 0.48128969897818286\n"
     ]
    }
   ],
   "source": [
    "#Print the values of accuracy, prescion, recall, and F1 score for the the test datasets\n",
    "\n",
    "print('classification report for test SVM dataset')\n",
    "linear_clf = svm.SVC(kernel='linear',C=best_c)\n",
    "linear_clf.fit(X_train, y_train)\n",
    "y_pred_l = linear_clf.predict(X_test)\n",
    "print(confusion_matrix(y_test,y_pred_l))\n",
    "print(classification_report(y_test,y_pred_l))\n",
    "print('************************')\n",
    "cnf_matrix_l = metrics.confusion_matrix(y_test,y_pred_l)\n",
    "tn, fp, fn, tp = metrics.confusion_matrix(y_test,y_pred_l).ravel()\n",
    "print(\"confusion_matrix:\",cnf_matrix_l)\n",
    "print(\"tn: \",tn,\" \",\",fp: \", fp,\" \",\",fn: \", fn,\" \" ,\",tp: \", tp)\n",
    "print('************************')\n",
    "print('classification report for test SVM dataset')\n",
    "acc=metrics.accuracy_score(y_test,y_pred_l)\n",
    "print(\"Accuracy:\",acc)\n",
    "pre=metrics.precision_score(y_test,y_pred_l)\n",
    "print(\"Precision:\",pre)\n",
    "rec=metrics.recall_score(y_test,y_pred_l)\n",
    "print(\"Recall:\",rec)\n",
    "fscore=metrics.f1_score(y_test,y_pred_l)\n",
    "print(\"f1 score:\",fscore)\n",
    "auc=metrics.roc_auc_score(y_test,y_pred_l)\n",
    "print(\"auc roc:\",auc)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def make_meshgrid(x, y, h=.02):\n",
    "    x_min, x_max = x.min() - 1, x.max() + 1\n",
    "    y_min, y_max = y.min() - 1, y.max() + 1\n",
    "    xx, yy = np.meshgrid(np.arange(x_min, x_max, h), np.arange(y_min, y_max, h))\n",
    "    return xx, yy\n",
    "\n",
    "def plot_contours(ax, clf, xx, yy, **params):\n",
    "    Z = clf.predict(np.c_[xx.ravel(), yy.ravel()])\n",
    "    Z = Z.reshape(xx.shape)\n",
    "    out = ax.contourf(xx, yy, Z, **params)\n",
    "    return out\n",
    "\n",
    "linear_clf = svm.SVC(kernel='linear',C=best_c)\n",
    "linear_clf.fit(X_train, y_train)\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "# title for the plots\n",
    "\n",
    "xx, yy = make_meshgrid( X_test[:, 0], X_test[:, 1])\n",
    "\n",
    "plot_contours(ax, linear_clf, xx, yy, cmap=plt.cm.coolwarm, alpha=0.8)\n",
    "\n",
    "plt.scatter(X_test[y_test== 0][:, 0],X_test [y_test== 0][:, 1],marker='o', color='r', label='-ve')\n",
    "plt.scatter(X_test [y_test== 1][:, 0],X_test [y_test== 1][:, 1],marker='x', color='b', label='+ve')\n",
    "\n",
    "ax.set_ylabel('y_test')\n",
    "ax.set_xlabel('x_test')\n",
    "ax.set_xticks(())\n",
    "ax.set_yticks(())\n",
    "ax.set_title('decision boundary for test SVM dataset')\n",
    "ax.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "*****************************\n",
      "classifier with gaussian kernel.\n"
     ]
    }
   ],
   "source": [
    "print('*****************************')\n",
    "print('classifier with gaussian kernel.')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "best c:  50\n",
      "best g:  50\n"
     ]
    }
   ],
   "source": [
    "#For the classifier with gaussian kernel i create a for loop to try a range of C values and gamma values to find\n",
    "#the C value and gamma value that gives the best F1 score using the validation data.\n",
    "\n",
    "c_values_rbf =[50,60,70,80,90,100]\n",
    "gamma_values_rbf= [50,60,70,80,90,100]\n",
    "  \n",
    "max_f1_score = float('-inf')\n",
    "best_c = None\n",
    "best_g= None\n",
    "\n",
    "\n",
    "for c in c_values_rbf:\n",
    "    for g in gamma_values_rbf:\n",
    "        rbf_clf = svm.SVC(kernel='rbf',C=c, gamma=g)\n",
    "        rbf_clf.fit(X_train, y_train)\n",
    "        y_pred_rbf = rbf_clf.predict(X_cv)\n",
    "        current_f1_score = metrics.f1_score(y_cv, y_pred)\n",
    "        if current_f1_score > max_f1_score:\n",
    "            max_f1_score = current_f1_score\n",
    "            best_c = c\n",
    "            best_g=g\n",
    "            \n",
    "print('best c: ',best_c)\n",
    "print('best g: ',best_g)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "classification report for validation SVM dataset\n",
      "[[72  7]\n",
      " [ 5 89]]\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.94      0.91      0.92        79\n",
      "           1       0.93      0.95      0.94        94\n",
      "\n",
      "    accuracy                           0.93       173\n",
      "   macro avg       0.93      0.93      0.93       173\n",
      "weighted avg       0.93      0.93      0.93       173\n",
      "\n",
      "************************\n",
      "confusion_matrix: [[72  7]\n",
      " [ 5 89]]\n",
      "tn:  72   ,fp:  7   ,fn:  5   ,tp:  89\n",
      "************************\n",
      "classification report for validation SVM dataset\n",
      "Accuracy: 0.930635838150289\n",
      "Precision: 0.9270833333333334\n",
      "Recall: 0.9468085106382979\n",
      "f1 score: 0.9305562706232008\n",
      "auc roc: 0.9291004578507944\n"
     ]
    }
   ],
   "source": [
    "print('classification report for validation SVM dataset')\n",
    "rbf_clf = svm.SVC(kernel='rbf',C=best_c,gamma=best_g)\n",
    "rbf_clf.fit(X_train, y_train)\n",
    "y_pred_rbf= rbf_clf.predict(X_cv)\n",
    "print(confusion_matrix(y_cv,y_pred_rbf))\n",
    "print(classification_report(y_cv,y_pred_rbf))        \n",
    "\n",
    "print('************************')\n",
    "cnf_matrix_rbf = metrics.confusion_matrix(y_cv,y_pred_rbf)\n",
    "tn, fp, fn, tp = metrics.confusion_matrix(y_cv,y_pred_rbf).ravel()\n",
    "print(\"confusion_matrix:\",cnf_matrix_rbf)\n",
    "print(\"tn: \",tn,\" \",\",fp: \", fp,\" \",\",fn: \", fn,\" \" ,\",tp: \", tp)\n",
    "print('************************')\n",
    "print('classification report for validation SVM dataset')\n",
    "\n",
    "acc=metrics.accuracy_score(y_cv,y_pred_rbf)\n",
    "print(\"Accuracy:\",acc)\n",
    "pre=metrics.precision_score(y_cv,y_pred_rbf)\n",
    "print(\"Precision:\",pre)\n",
    "rec=metrics.recall_score(y_cv,y_pred_rbf)\n",
    "print(\"Recall:\",rec)\n",
    "fscore=metrics.f1_score(y_cv,y_pred_rbf, average='weighted')\n",
    "print(\"f1 score:\",fscore)\n",
    "auc=metrics.roc_auc_score(y_cv,y_pred_rbf)\n",
    "print(\"auc roc:\",auc)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "confusion_matrix validation SVM dataset\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=(8, 8))\n",
    "ax.imshow(cnf_matrix_rbf)\n",
    "ax.grid(False)\n",
    "ax.xaxis.set(ticks=(0, 1), ticklabels=('Predicted 0s', 'Predicted 1s'))\n",
    "ax.yaxis.set(ticks=(0, 1), ticklabels=('Actual 0s', 'Actual 1s'))\n",
    "ax.set_ylim(1.5, -0.5)\n",
    "s = [['TN','FP'], ['FN', 'TP']]\n",
    "for i in range(2):\n",
    "    for j in range(2):\n",
    "        ax.text(j, i, str(s[i][j])+\" = \"+str(cnf_matrix_rbf[i][j]), ha='center', va='center', color='black')\n",
    "print('confusion_matrix validation SVM dataset')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "confusion_matrix validation SVM dataset\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x25df2b21a60>"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "print('confusion_matrix validation SVM dataset')\n",
    "plot_confusion_matrix(rbf_clf, X_cv, y_cv)       "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def make_meshgrid(x, y, h=.02):\n",
    "    x_min, x_max = x.min() - 1, x.max() + 1\n",
    "    y_min, y_max = y.min() - 1, y.max() + 1\n",
    "    xx, yy = np.meshgrid(np.arange(x_min, x_max, h), np.arange(y_min, y_max, h))\n",
    "    return xx, yy\n",
    "\n",
    "def plot_contours(ax, clf, xx, yy, **params):\n",
    "    Z = clf.predict(np.c_[xx.ravel(), yy.ravel()])\n",
    "    Z = Z.reshape(xx.shape)\n",
    "    out = ax.contourf(xx, yy, Z, **params)\n",
    "    return out\n",
    "\n",
    "rbf_clf = svm.SVC(kernel='rbf',C=best_c,gamma=best_g)\n",
    "rbf_clf.fit(X_train, y_train)\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "xx, yy = make_meshgrid( X_cv[:, 0], X_cv[:, 1])\n",
    "\n",
    "plot_contours(ax, rbf_clf, xx, yy, cmap=plt.cm.Paired, alpha=0.8)\n",
    "\n",
    "plt.scatter(X_cv[y_cv== 0][:, 0],X_cv [y_cv== 0][:, 1],marker='o', color='r', label='-ve')\n",
    "plt.scatter(X_cv [y_cv== 1][:, 0],X_cv [y_cv== 1][:, 1],marker='x', color='b', label='+ve')\n",
    "# ax.scatter(X0, X1, c=y_train, cmap=plt.cm.coolwarm, s=20, edgecolors='k')\n",
    "ax.set_ylabel('y_cv')\n",
    "ax.set_xlabel('X_cv')\n",
    "ax.set_xticks(())\n",
    "ax.set_yticks(())\n",
    "ax.set_title('decision boundary for validation SVM dataset')\n",
    "ax.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "classification report for test SVM dataset\n",
      "[[ 68   3]\n",
      " [  0 102]]\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       1.00      0.96      0.98        71\n",
      "           1       0.97      1.00      0.99       102\n",
      "\n",
      "    accuracy                           0.98       173\n",
      "   macro avg       0.99      0.98      0.98       173\n",
      "weighted avg       0.98      0.98      0.98       173\n",
      "\n",
      "************************\n",
      "confusion_matrix: [[ 68   3]\n",
      " [  0 102]]\n",
      "tn:  68   ,fp:  3   ,fn:  0   ,tp:  102\n",
      "************************\n",
      "classification report for test SVM dataset\n",
      "Accuracy: 0.9826589595375722\n",
      "Precision: 0.9714285714285714\n",
      "Recall: 1.0\n",
      "f1 score: 0.9855072463768115\n",
      "auc roc: 0.9788732394366197\n"
     ]
    }
   ],
   "source": [
    "print('classification report for test SVM dataset')\n",
    "rbf_clf = svm.SVC(kernel='rbf',C=best_c,gamma=best_g)\n",
    "rbf_clf.fit(X_train, y_train)\n",
    "y_pred_rbf = rbf_clf.predict(X_test)\n",
    "print(confusion_matrix(y_test,y_pred_rbf))\n",
    "print(classification_report(y_test,y_pred_rbf))        \n",
    "\n",
    "print('************************')\n",
    "cnf_matrix_rbf = metrics.confusion_matrix(y_test,y_pred_rbf)\n",
    "tn, fp, fn, tp = metrics.confusion_matrix(y_test,y_pred_rbf).ravel()\n",
    "print(\"confusion_matrix:\",cnf_matrix_rbf)\n",
    "print(\"tn: \",tn,\" \",\",fp: \", fp,\" \",\",fn: \", fn,\" \" ,\",tp: \", tp)\n",
    "print('************************')\n",
    "print('classification report for test SVM dataset')\n",
    "acc=metrics.accuracy_score(y_test,y_pred_rbf)\n",
    "print(\"Accuracy:\",acc)\n",
    "pre=metrics.precision_score(y_test,y_pred_rbf)\n",
    "print(\"Precision:\",pre)\n",
    "rec=metrics.recall_score(y_test,y_pred_rbf)\n",
    "print(\"Recall:\",rec)\n",
    "fscore=metrics.f1_score(y_test,y_pred_rbf)\n",
    "print(\"f1 score:\",fscore)\n",
    "auc=metrics.roc_auc_score(y_test,y_pred_rbf)\n",
    "print(\"auc roc:\",auc)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "confusion_matrix test SVM dataset\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x25df32e0040>"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "print('confusion_matrix test SVM dataset')\n",
    "plot_confusion_matrix(rbf_clf, X_test, y_test)       "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "confusion_matrix test SVM dataset\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=(8, 8))\n",
    "ax.imshow(cnf_matrix_rbf)\n",
    "ax.grid(False)\n",
    "ax.xaxis.set(ticks=(0, 1), ticklabels=('Predicted 0s', 'Predicted 1s'))\n",
    "ax.yaxis.set(ticks=(0, 1), ticklabels=('Actual 0s', 'Actual 1s'))\n",
    "ax.set_ylim(1.5, -0.5)\n",
    "s = [['TN','FP'], ['FN', 'TP']]\n",
    "for i in range(2):\n",
    "    for j in range(2):\n",
    "        ax.text(j, i, str(s[i][j])+\" = \"+str(cnf_matrix_rbf[i][j]), ha='center', va='center', color='black')\n",
    "print('confusion_matrix test SVM dataset')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def make_meshgrid(x, y, h=.02):\n",
    "    x_min, x_max = x.min() - 1, x.max() + 1\n",
    "    y_min, y_max = y.min() - 1, y.max() + 1\n",
    "    xx, yy = np.meshgrid(np.arange(x_min, x_max, h), np.arange(y_min, y_max, h))\n",
    "    return xx, yy\n",
    "\n",
    "def plot_contours(ax, clf, xx, yy, **params):\n",
    "    Z = clf.predict(np.c_[xx.ravel(), yy.ravel()])\n",
    "    Z = Z.reshape(xx.shape)\n",
    "    out = ax.contourf(xx, yy, Z, **params)\n",
    "    return out\n",
    "\n",
    "rbf_clf = svm.SVC(kernel='rbf',C=best_c,gamma=best_g)\n",
    "rbf_clf.fit(X_train, y_train)\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "xx, yy = make_meshgrid( X_test[:, 0], X_test[:, 1])\n",
    "\n",
    "plot_contours(ax, rbf_clf, xx, yy, cmap=plt.cm.Paired, alpha=0.8)\n",
    "\n",
    "plt.scatter(X_test[y_test== 0][:, 0],X_test [y_test== 0][:, 1],marker='o', color='r', label='-ve')\n",
    "plt.scatter(X_test [y_test== 1][:, 0],X_test [y_test== 1][:, 1],marker='x', color='b', label='+ve')\n",
    "# ax.scatter(X0, X1, c=y_train, cmap=plt.cm.coolwarm, s=20, edgecolors='k')\n",
    "ax.set_ylabel('y_test')\n",
    "ax.set_xlabel('X_test')\n",
    "ax.set_xticks(())\n",
    "ax.set_yticks(())\n",
    "ax.set_title('decision boundary for test SVM dataset')\n",
    "ax.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "classification report for train SVM dataset\n",
      "[[233   0]\n",
      " [  0 284]]\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       1.00      1.00      1.00       233\n",
      "           1       1.00      1.00      1.00       284\n",
      "\n",
      "    accuracy                           1.00       517\n",
      "   macro avg       1.00      1.00      1.00       517\n",
      "weighted avg       1.00      1.00      1.00       517\n",
      "\n",
      "************************\n",
      "confusion_matrix: [[233   0]\n",
      " [  0 284]]\n",
      "tn:  233   ,fp:  0   ,fn:  0   ,tp:  284\n",
      "************************\n",
      "classification report for train SVM dataset\n",
      "Accuracy: 1.0\n",
      "Precision: 1.0\n",
      "Recall: 1.0\n",
      "f1 score: 1.0\n",
      "auc roc: 1.0\n"
     ]
    }
   ],
   "source": [
    "print('classification report for train SVM dataset')\n",
    "rbf_clf = svm.SVC(kernel='rbf',C=best_c,gamma=best_g)\n",
    "rbf_clf.fit(X_train, y_train)\n",
    "y_pred_rbf= rbf_clf.predict(X_train)\n",
    "print(confusion_matrix(y_train,y_pred_rbf))\n",
    "print(classification_report(y_train,y_pred_rbf))        \n",
    "\n",
    "print('************************')\n",
    "cnf_matrix_rbf = metrics.confusion_matrix(y_train,y_pred_rbf)\n",
    "tn, fp, fn, tp = metrics.confusion_matrix(y_train,y_pred_rbf).ravel()\n",
    "print(\"confusion_matrix:\",cnf_matrix_rbf)\n",
    "print(\"tn: \",tn,\" \",\",fp: \", fp,\" \",\",fn: \", fn,\" \" ,\",tp: \", tp)\n",
    "print('************************')\n",
    "print('classification report for train SVM dataset')\n",
    "acc=metrics.accuracy_score(y_train,y_pred_rbf)\n",
    "print(\"Accuracy:\",acc)\n",
    "pre=metrics.precision_score(y_train,y_pred_rbf)\n",
    "print(\"Precision:\",pre)\n",
    "rec=metrics.recall_score(y_train,y_pred_rbf)\n",
    "print(\"Recall:\",rec)\n",
    "fscore=metrics.f1_score(y_train,y_pred_rbf)\n",
    "print(\"f1 score:\",fscore)\n",
    "auc=metrics.roc_auc_score(y_train,y_pred_rbf)\n",
    "print(\"auc roc:\",auc)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "confusion_matrix train SVM dataset\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x25df46ca3d0>"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "print('confusion_matrix train SVM dataset')\n",
    "plot_confusion_matrix(rbf_clf, X_train, y_train)      "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "confusion_matrix train SVM dataset\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=(8, 8))\n",
    "ax.imshow(cnf_matrix_rbf)\n",
    "ax.grid(False)\n",
    "ax.xaxis.set(ticks=(0, 1), ticklabels=('Predicted 0s', 'Predicted 1s'))\n",
    "ax.yaxis.set(ticks=(0, 1), ticklabels=('Actual 0s', 'Actual 1s'))\n",
    "ax.set_ylim(1.5, -0.5)\n",
    "s = [['TN','FP'], ['FN', 'TP']]\n",
    "for i in range(2):\n",
    "    for j in range(2):\n",
    "        ax.text(j, i, str(s[i][j])+\" = \"+str(cnf_matrix_rbf[i][j]), ha='center', va='center', color='black')\n",
    "print('confusion_matrix train SVM dataset')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def make_meshgrid(x, y, h=.02):\n",
    "    x_min, x_max = x.min() - 1, x.max() + 1\n",
    "    y_min, y_max = y.min() - 1, y.max() + 1\n",
    "    xx, yy = np.meshgrid(np.arange(x_min, x_max, h), np.arange(y_min, y_max, h))\n",
    "    return xx, yy\n",
    "\n",
    "def plot_contours(ax, clf, xx, yy, **params):\n",
    "    Z = clf.predict(np.c_[xx.ravel(), yy.ravel()])\n",
    "    Z = Z.reshape(xx.shape)\n",
    "    out = ax.contourf(xx, yy, Z, **params)\n",
    "    return out\n",
    "\n",
    "rbf_clf = svm.SVC(kernel='rbf',C=best_c,gamma=best_g)\n",
    "rbf_clf.fit(X_train, y_train)\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "xx, yy = make_meshgrid( X_train[:, 0], X_train[:, 1])\n",
    "\n",
    "plot_contours(ax, rbf_clf, xx, yy, cmap=plt.cm.Paired, alpha=0.8)\n",
    "\n",
    "plt.scatter(X_train[y_train== 0][:, 0],X_train [y_train== 0][:, 1],marker='o', color='r', label='-ve')\n",
    "plt.scatter(X_train [y_train== 1][:, 0],X_train [y_train== 1][:, 1],marker='x', color='b', label='+ve')\n",
    "# ax.scatter(X0, X1, c=y_train, cmap=plt.cm.coolwarm, s=20, edgecolors='k')\n",
    "ax.set_ylabel('y_train')\n",
    "ax.set_xlabel('X_train')\n",
    "ax.set_xticks(())\n",
    "ax.set_yticks(())\n",
    "ax.set_title('decision boundary for train SVM dataset')\n",
    "ax.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
